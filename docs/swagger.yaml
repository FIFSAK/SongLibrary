basePath: /
definitions:
  models.CreateSongInput:
    properties:
      group:
        example: Muse
        type: string
      song:
        example: Supermassive Black Hole
        type: string
    required:
    - group
    - song
    type: object
  models.Song:
    properties:
      createdAt:
        type: string
      groupName:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      songName:
        type: string
      text:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing songs library with external API integration
  title: Song Library API
  version: "1.0"
paths:
  /songs:
    get:
      description: Get list of songs with filtering and pagination
      parameters:
      - description: Song ID
        in: query
        name: id
        type: integer
      - description: Group name
        in: query
        name: group
        type: string
      - description: Song name
        in: query
        name: song
        type: string
      - description: Release date
        format: date
        in: query
        name: releaseDate
        type: string
      - description: Text fragment
        in: query
        name: text
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Add song using external API enrichment
      parameters:
      - description: Group and Song
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.CreateSongInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
        "502":
          description: Bad Gateway
          schema:
            additionalProperties: true
            type: object
      summary: Add song
      tags:
      - songs
  /songs/{id}:
    delete:
      description: Delete a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update an existing song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated song object
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update song
      tags:
      - songs
  /songs/{id}/verses:
    get:
      description: Get paginated verses of a song by its ID (split by paragraphs)
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number (default 1)
        in: query
        name: page
        type: integer
      - description: Verses per page (default 3)
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get song verses
      tags:
      - songs
swagger: "2.0"
